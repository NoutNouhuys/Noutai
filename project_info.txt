# Project Informatie: aiontwikkelhulp

## Projectoverzicht
De AI Ontwikkelhulp (aiontwikkelhulp) is een tool die de communicatie tussen gebruikers en AI-modellen (specifiek Claude) faciliteert om code-ontwikkeling en repository-beheer te ondersteunen. De tool biedt een gestructureerde manier om AI-gestuurde ontwikkeling uit te voeren volgens een vooraf gedefinieerde werkwijze. Ondersteunt configureerbare LLM instellingen inclusief temperature configuratie en presets voor verschillende use cases met volledige UI integratie. Bevat workflow automatisering voor het automatisch openen en sluiten van chat windows op basis van AI responses, inclusief automatische configuratie van nieuwe chats met Claude Sonnet 4 en developer_agent preset. Volledig analytics systeem voor token usage tracking, kosten berekening en usage insights met real-time weergave in de chat interface. Uitgebreid met conversation enhancements voor token usage weergave en bulk delete functionaliteit. CSRF token ondersteuning geïmplementeerd voor alle API calls. Volledig gerefactored voor betere code organisatie met scheiding van HTML, JavaScript en CSS. Enhanced tool logging geïmplementeerd voor gedetailleerde inzichten in tool uitvoering met visueel onderscheidbare log patterns. Workflow tabs functionaliteit geïmplementeerd voor directe toegang tot 3 verschillende workflow profielen via tabs in plaats van één enkel window, wat de gebruikservaring verbetert door directe toegang, overzicht en efficiëntie. Tab kleurstelling verbeterd voor optimale leesbaarheid in zowel light als dark mode met WCAG AA compliance. **Bitbucket integratie volledig geïmplementeerd** met multi-platform ondersteuning naast GitHub, inclusief platform selector UI, connection management, en unified tool interface.

## Architectuur
De aiontwikkelhulp bestaat uit verschillende modules die samenwerken om gebruikers te helpen bij het ontwikkelen van software met behulp van AI:

### Core Modules:
- Flask web-applicatie (app.py) - met analytics routes, CSRF protection, en **Platform API registratie**
- Anthropic API integratie (anthropic_api.py) - met token tracking integratie
- MCP Connector voor tools integratie (mcp_connector.py)
- **Platform API (platform_api.py)** - Multi-platform management voor GitHub en Bitbucket
- **MCP Integration (mcp_integration.py)** - Unified interface voor beide platforms
- Configuratie (config.py)
- Repository beheer

### Platform Integration Modules:
- **Platform API (platform_api.py)** - Platform management endpoints met async/await fixes
- **MCP Integration (mcp_integration.py)** - Multi-platform routing en tool conversion
- **Bitbucket MCP Connector (mcp_bitbucket_connector.py)** - Directe Bitbucket API integratie
- **Anthropic Config (anthropic_config.py)** - Uitgebreid met multi-platform configuratie

### Analytics Modules:
- Token tracker (analytics/token_tracker.py) - Token usage monitoring en recording
- Cost calculator (analytics/cost_calculator.py) - Kosten berekening op basis van model pricing
- Analytics service (analytics/analytics_service.py) - Data aggregatie en insights
- Analytics repository (repositories/analytics_repository.py) - Database operaties voor analytics

### Nieuwe Modules (Refactoring):
- Anthropic configuratie (anthropic_config.py) - met LLM settings, presets, en **multi-platform ondersteuning**
- Anthropic client (anthropic_client.py) - met temperature en preset ondersteuning
- Conversation manager (conversation_manager.py)
- MCP integratie (mcp_integration.py) - met enhanced tool logging en **multi-platform support**

### Frontend Modules:
- templates/home.html - Hoofdtemplate met workflow tabs functionaliteit en **platform selector UI** (9.1KB)
- templates/components/chat_window.html - Herbruikbare chat window component
- templates/conversations.html - Conversation management met token usage, bulk delete en CSRF token ondersteuning
- templates/analytics.html - Analytics dashboard template
- static/js/home.js - JavaScript met workflow tabs, tab-based workflow automatisering, en **platform switching logica** (74KB)
- static/css/home.css - CSS met verbeterde workflow tabs styling, WCAG AA compliance en activity indicators (5.4KB)
- **static/css/platform-selector.css** - Styling voor platform selector interface (5.1KB)
- static/css/style.css - Algemene applicatie styling
- static/css/analytics.css - Styling voor analytics dashboard
- static/js/analytics.js - JavaScript voor analytics dashboard functionaliteit
- static/js/log-formatter.js - Log formatting functionaliteit met enhanced tool logging support
- static/css/log-formatter.css - Styling voor geformatteerde logs met enhanced tool logging patterns

## Modules

### platform_api.py
- **Status**: **Gefixed** - Async/await issues opgelost en geregistreerd in app.py (14.7KB)
- **Pad**: /platform_api.py
- **Functionaliteit**: API endpoints voor platform management (GitHub/Bitbucket). **Belangrijke fixes toegepast**:
  - **Async/await issues opgelost**: Alle async calls nu via asyncio.run() voor Flask compatibility
  - **Proper initialisatie**: MCP integration wordt correct geïnitialiseerd in app context
  - **Error handling**: Robuuste error handling voor connection failures
  - **Platform endpoints**: /config, /status, /connect, /disconnect, /switch, /tools, /validate
  - **Session management**: Platform state wordt opgeslagen in Flask session
  - **Configuration validation**: Platform-specifieke configuratie validatie
- **Afhankelijkheden**: anthropic_config.py, mcp_integration.py, Flask session management

### app.py
- **Status**: **Bijgewerkt** - Platform API registratie toegevoegd (6.3KB)
- **Pad**: /app.py
- **Functionaliteit**: Flask web-applicatie die de gebruikersinterface biedt. **Belangrijke updates**:
  - **Platform API registratie**: `init_platform_api(app)` toegevoegd aan create_app()
  - **Error handling**: Graceful fallback als Platform API initialisatie faalt
  - **Logging**: Uitgebreide logging voor platform modules
  - Analytics route registratie en analytics pagina endpoint
  - CSRF protection via Flask-WTF CSRFProtect() voor alle formulieren en API calls
- **Afhankelijkheden**: anthropic_api.py, config.py, routes/analytics.py, **platform_api.py**, Flask-WTF

### mcp_integration.py
- **Status**: **Actief** - Multi-platform ondersteuning met tool conversion (27.9KB)
- **Pad**: /mcp_integration.py
- **Functionaliteit**: Beheert MCP server connecties en tool gebruik voor **meerdere platforms**. **Belangrijke functionaliteiten**:
  - **Multi-platform routing**: Automatische detectie van GitHub vs Bitbucket tools
  - **Tool conversion**: GitHub tools worden automatisch geconverteerd naar Bitbucket equivalenten
  - **Platform switching**: Dynamisch wisselen tussen GitHub en Bitbucket
  - **Enhanced tool logging**: Gedetailleerde logging met tool-specifieke formatting
  - **Connection management**: Robuuste verbindingsbeheer voor beide platforms
  - **Error handling**: Platform-specifieke error messages en fallbacks
- **Afhankelijkheden**: mcp_connector.py, **mcp_bitbucket_connector.py**, anthropic_config.py

### static/css/platform-selector.css
- **Status**: **Nieuw toegevoegd** - Professional platform selector styling (5.1KB)
- **Pad**: /static/css/platform-selector.css
- **Functionaliteit**: CSS styling voor platform selector interface. **Features**:
  - **Professional design**: GitHub-style design met moderne styling
  - **Status indicators**: Kleurgecodeerde status badges met animaties
  - **Responsive design**: Mobile-friendly met scrollable tabs
  - **Dark mode support**: Volledige ondersteuning voor dark/light themes
  - **Accessibility**: WCAG AA compliance met proper contrast ratios
  - **Loading states**: Visual feedback voor connection states
  - **Error/success states**: Visual feedback voor platform operations
- **Afhankelijkheden**: Gebruikt CSS variabelen uit style.css

### templates/home.html
- **Status**: **Bijgewerkt** - Platform selector UI toegevoegd (9.1KB)
- **Pad**: /templates/home.html
- **Functionaliteit**: Hoofdtemplate voor de chat interface met **platform selector**. **Nieuwe features**:
  - **Platform selection panel**: Radio buttons voor GitHub/Bitbucket keuze
  - **Connection status**: Real-time status indicator met connect/disconnect button
  - **Platform icons**: Font Awesome icons voor visuele herkenning
  - **Responsive layout**: Mobile-friendly platform selector
  - Workflow tabs functionaliteit (bestaand)
  - Bootstrap tabs voor 3 workflow profielen met activity indicators
- **Afhankelijkheden**: base.html, components/chat_window.html, static/js/home.js, static/css/home.css, **static/css/platform-selector.css**

### static/js/home.js
- **Status**: **Uitgebreid** - Platform switching logica toegevoegd (74KB)
- **Pad**: /static/js/home.js
- **Functionaliteit**: JavaScript voor home pagina inclusief **platform management**. **Nieuwe functionaliteiten**:
  - **Platform switching**: `switchPlatform()`, `connectPlatform()`, `disconnectPlatform()`
  - **Status management**: Real-time platform status updates
  - **Configuration loading**: Automatisch laden van platform configuratie
  - **Error handling**: User-friendly error messages voor connection issues
  - **Session persistence**: Platform state wordt bewaard tussen sessies
  - **API integration**: Volledige integratie met Platform API endpoints
  - Workflow tabs en tab-based workflow automatisering (bestaand)
- **Afhankelijkheden**: log-formatter.js, Platform API endpoints

### anthropic_config.py
- **Status**: **Uitgebreid** - Multi-platform configuratie ondersteuning
- **Pad**: /anthropic_config.py
- **Functionaliteit**: Centralized configuratie met **multi-platform ondersteuning**. **Nieuwe features**:
  - **Platform constants**: PLATFORM_GITHUB, PLATFORM_BITBUCKET
  - **Platform validation**: `is_platform_supported()`, `get_available_platforms()`
  - **Bitbucket configuratie**: `is_bitbucket_configured()`, bitbucket properties
  - **GitHub configuratie**: `is_github_configured()`, MCP server properties
  - **Default platform**: Configureerbare default platform via environment
  - LLM settings en presets (bestaand)
- **Afhankelijkheden**: Environment variables voor beide platforms

### static/css/home.css
- **Status**: Verbeterd met professionele tab kleurstelling en WCAG AA compliance (5.4KB)
- **Pad**: /static/css/home.css
- **Functionaliteit**: CSS styling voor workflow tabs container met verbeterde kleurstelling voor optimale leesbaarheid. Nieuwe functionaliteit:
  - Professionele tab kleurstelling voor light en dark mode
  - WCAG AA compliance met contrast ratio 4.5:1 voor toegankelijkheid
  - Verbeterde hover en focus states voor keyboard navigatie
  - Fix voor probleem met witte tekst op witte achtergrond
  - Workflow-active indicator met subtiele groene tint
  - Activity indicator animatie met proper contrast
  - Responsive design voor mobile devices met scrollable tabs
  - Consistent GitHub-style design met rest van applicatie
  - Dark mode overrides voor optimale weergave in beide thema's
- **Afhankelijkheden**: style.css (voor CSS variabelen)

### templates/components/chat_window.html
- **Status**: Nieuw toegevoegd tijdens refactoring
- **Pad**: /templates/components/chat_window.html
- **Functionaliteit**: Herbruikbare Jinja2 macro voor chat window component. Parametriseerbaar met window ID en active state. Bevat volledige chat window structuur inclusief model/preset selectors, chat/log kolommen, en input gebied.
- **Afhankelijkheden**: Geen

### templates/conversations.html
- **Status**: Uitgebreid met token usage, bulk delete functionaliteit en CSRF token ondersteuning
- **Pad**: /templates/conversations.html
- **Functionaliteit**: Template voor conversation management interface. Ondersteunt conversation listing, search, rename, delete operations met real-time updates. Token usage weergave per gesprek (input/output tokens, kosten), bulk delete functionaliteit met checkboxes, selecteer alles/geen functionaliteit, bevestigingsmodals voor bulk acties, responsive design voor mobile devices. Volledige CSRF token ondersteuning: getCSRFToken() functie, X-CSRFToken header in alle fetch requests, proper error handling voor alle API calls.
- **Afhankelijkheden**: base.html, API endpoints, analytics API endpoints

### templates/base.html
- **Status**: Actief met CSRF token ondersteuning
- **Pad**: /templates/base.html
- **Functionaliteit**: Basis template met navigatie, thema switching en CSRF token meta tag. Bevat `<meta name="csrf-token" content="{{ csrf_token() }}">` voor frontend toegang tot CSRF token.
- **Afhankelijkheden**: Flask-WTF CSRF token functionaliteit

### routes/api.py
- **Status**: Uitgebreid met token usage endpoints, enhanced conversations API en CSRF protection
- **Pad**: /routes/api.py
- **Functionaliteit**: API endpoints voor conversation management inclusief pagination, search, bulk operations, CRUD operaties met database persistence. Geïntegreerd met ConversationManager voor robuuste data handling. Bugfix toegepast voor thread context issue in send_prompt_stream functie. LLM settings API endpoints, temperature en preset ondersteuning in prompt endpoints. Token usage endpoints: GET /api/analytics/conversations/<id>/usage voor conversation-specifieke usage data, GET /api/analytics/users/<id>/usage voor user usage summaries. Enhanced conversations endpoint met include_usage parameter voor token data. Volledige CSRF protection via Flask-WTF voor alle POST/PUT/DELETE endpoints met proper error handling.
- **Afhankelijkheden**: anthropic_api.py, ConversationManager, ConversationRepository, AnalyticsRepository, Flask app context, Flask-WTF CSRF

### static/css/style.css
- **Status**: Uitgebreid met conversation enhancements styling
- **Pad**: /static/css/style.css
- **Functionaliteit**: Algemene styling voor de applicatie inclusief GitHub-achtige thema's. Ondersteunt de gesplitste kolom layout voor chat en logs. Styling voor workflow toggle button consistent met bestaande UI. Conversation enhancements: Bulk selection styling, token usage summary styling, responsive design voor mobile devices, checkbox styling, bulk delete button animations.
- **Afhankelijkheden**: Geen

### analytics/token_tracker.py
- **Status**: Actief
- **Pad**: /analytics/token_tracker.py
- **Functionaliteit**: Tracks token usage en berekent kosten voor AI model interacties. Ondersteunt recording van usage data, conversation analytics, usage trends, cost estimates, model statistics, en cleanup van oude records.
- **Afhankelijkheden**: models/token_usage.py, analytics/cost_calculator.py, database.py

### analytics/cost_calculator.py
- **Status**: Actief
- **Pad**: /analytics/cost_calculator.py
- **Functionaliteit**: Berekent kosten voor token usage op basis van model pricing. Ondersteunt alle Claude modellen inclusief Claude 4 Sonnet, cache pricing, cost projections, efficiency metrics, en model recommendations.
- **Afhankelijkheden**: Geen directe afhankelijkheden

### analytics/analytics_service.py
- **Status**: Actief
- **Pad**: /analytics/analytics_service.py
- **Functionaliteit**: Service voor analytics data aggregatie en insights. Biedt dashboard data, conversation analytics, cost analysis, usage patterns, model comparison, en automated insights generation.
- **Afhankelijkheden**: analytics/token_tracker.py, analytics/cost_calculator.py, repositories/analytics_repository.py

### repositories/analytics_repository.py
- **Status**: Actief
- **Pad**: /repositories/analytics_repository.py
- **Functionaliteit**: Repository voor analytics en token usage data access. Ondersteunt CRUD operaties, aggregaties, trends analysis, top conversations, model breakdowns, en data cleanup.
- **Afhankelijkheden**: models/token_usage.py, models/conversation.py, database.py

### models/token_usage.py
- **Status**: Actief
- **Pad**: /models/token_usage.py
- **Functionaliteit**: Database model voor token usage tracking. Ondersteunt input/output tokens, cache tokens, cost calculations, metadata storage, en relationships met conversations en messages.
- **Afhankelijkheden**: database.py (SQLAlchemy)

### routes/analytics.py
- **Status**: Actief
- **Pad**: /routes/analytics.py
- **Functionaliteit**: API endpoints voor analytics data. Ondersteunt dashboard data, token usage, costs, trends, model analytics, conversation analytics, cost estimates, pricing info, data export, en cleanup.
- **Afhankelijkheden**: analytics/analytics_service.py, analytics/token_tracker.py, analytics/cost_calculator.py

### templates/analytics.html
- **Status**: Actief
- **Pad**: /templates/analytics.html
- **Functionaliteit**: Analytics dashboard template met summary cards, charts, model breakdown, top conversations, en insights. Ondersteunt periode selectie en real-time data loading.
- **Afhankelijkheden**: base.html, static/css/analytics.css, static/js/analytics.js

### static/css/analytics.css
- **Status**: Actief
- **Pad**: /static/css/analytics.css
- **Functionaliteit**: Styling voor analytics dashboard inclusief responsive design, dark mode support, charts styling, breakdown tables, en insights display.
- **Afhankelijkheden**: Gebruikt CSS variabelen uit style.css

### static/js/analytics.js
- **Status**: Actief
- **Pad**: /static/js/analytics.js
- **Functionaliteit**: JavaScript voor analytics dashboard functionaliteit. Ondersteunt data loading, Chart.js visualisaties, period selection, error handling, en data formatting.
- **Afhankelijkheden**: Chart.js library

### anthropic_api.py
- **Status**: Uitgebreid met token tracking integratie
- **Pad**: /anthropic_api.py
- **Functionaliteit**: High-level API voor interactie met Anthropic Claude modellen. Coördineert tussen client, conversation management, MCP integratie, en token tracking. Ondersteunt conditionele inclusie van project_info in cache. Token usage recording, conversation analytics, real-time usage tracking.
- **Afhankelijkheden**: anthropic_config.py, anthropic_client.py, conversation_manager.py, mcp_integration.py, repositories, analytics/token_tracker.py

### anthropic_client.py
- **Status**: Uitgebreid met LLM settings ondersteuning
- **Pad**: /anthropic_client.py
- **Functionaliteit**: Pure API communicatie met Claude modellen. Ondersteunt ephemeral caching van zowel system prompt als project_info. Temperature parameter ondersteuning, preset functionaliteit, parameter override capability, model-specifieke settings toepassing, en LLM settings validatie.
- **Afhankelijkheden**: anthropic_config.py

### conversation_manager.py
- **Status**: Volledig geïntegreerd met database
- **Pad**: /conversation_manager.py
- **Functionaliteit**: Beheert conversatie staat en geschiedenis met robuuste database persistentie. Ondersteunt pagination, search, metadata beheer, soft delete. Behoudt backwards compatibility met in-memory storage.
- **Afhankelijkheden**: repositories (ConversationRepository voor database operaties)

### config.py
- **Status**: Gerefactored
- **Pad**: /config.py
- **Functionaliteit**: Verzorgt de algemene applicatie configuratie. Anthropic-specifieke config is verplaatst naar anthropic_config.py.
- **Afhankelijkheden**: anthropic_config.py

### mcp_connector.py
- **Status**: Actief
- **Pad**: /mcp_connector.py
- **Functionaliteit**: Zorgt voor communicatie met externe tools die AI kan gebruiken.
- **Afhankelijkheden**: Geen directe afhankelijkheden binnen het project

### database.py
- **Status**: Uitgebreid met TokenUsage model
- **Pad**: /database.py
- **Functionaliteit**: Database configuratie en session management voor SQLAlchemy. TokenUsage model import voor analytics functionaliteit.
- **Afhankelijkheden**: Flask-SQLAlchemy, models/token_usage.py

### werkwijze/werkwijze.txt
- **Status**: Actief
- **Pad**: /werkwijze/werkwijze.txt
- **Functionaliteit**: Bevat instructies voor het AI-model over hoe repository-ontwikkeling moet verlopen.
- **Afhankelijkheden**: Wordt gebruikt door anthropic_config.py (lazy loaded)

### system_prompt.txt
- **Status**: Actief
- **Pad**: /system_prompt.txt
- **Functionaliteit**: Bevat de basis system prompt voor het AI-model.
- **Afhankelijkheden**: Wordt gebruikt door anthropic_config.py (lazy loaded)

### project_info.txt
- **Status**: **Bijgewerkt** - Documentatie van Bitbucket integratie fixes
- **Pad**: /project_info.txt
- **Functionaliteit**: Bevat projectinformatie die wordt gecached voor betere performance bij ontwikkel-gerelateerde vragen. **Bijgewerkt met**:
  - Platform API registratie en async fixes
  - Multi-platform ondersteuning documentatie
  - Troubleshooting informatie voor platform connections
- **Afhankelijkheden**: Wordt gebruikt door anthropic_config.py (lazy loaded)

### repositories/conversation_repository.py
- **Status**: Actief (volledig geïntegreerd)
- **Pad**: /repositories/conversation_repository.py
- **Functionaliteit**: CRUD operaties voor conversations en messages met SQLAlchemy. Ondersteunt soft delete, bulk operations, en transaction management.
- **Afhankelijkheden**: models/conversation.py, database.py

### models/conversation.py
- **Status**: Actief (bijgewerkt)
- **Pad**: /models/conversation.py
- **Functionaliteit**: Database modellen voor conversations en messages. Ondersteunt metadata storage, timestamps, en relationships.
- **Afhankelijkheden**: database.py (SQLAlchemy)

### tests/test_anthropic_config.py
- **Status**: Actief (bijgewerkt)
- **Pad**: /tests/test_anthropic_config.py
- **Functionaliteit**: Unit tests voor AnthropicConfig module, inclusief tests voor project_info caching.
- **Afhankelijkheden**: anthropic_config.py

### tests/test_anthropic_config_llm_settings.py
- **Status**: Actief
- **Pad**: /tests/test_anthropic_config_llm_settings.py
- **Functionaliteit**: Unit tests voor AnthropicConfig LLM settings functionaliteit, inclusief temperature validatie, presets, model-specifieke instellingen, en environment variable loading.
- **Afhankelijkheden**: anthropic_config.py

### tests/test_anthropic_client.py
- **Status**: Uitgebreid met LLM settings tests
- **Pad**: /tests/test_anthropic_client.py
- **Functionaliteit**: Unit tests voor AnthropicClient module, inclusief tests voor project_info caching. Tests voor temperature parameters, preset functionaliteit, parameter overrides, model-specifieke settings, en validatie.
- **Afhankelijkheden**: anthropic_client.py, anthropic_config.py

### tests/test_conversation_manager.py
- **Status**: Volledig uitgebreid
- **Pad**: /tests/test_conversation_manager.py
- **Functionaliteit**: Comprehensive unit tests voor ConversationManager inclusief database integration, CRUD operations, search, pagination, error handling.
- **Afhankelijkheden**: conversation_manager.py

### tests/test_api_conversation_persistence.py
- **Status**: Actief
- **Pad**: /tests/test_api_conversation_persistence.py
- **Functionaliteit**: API tests voor conversation persistence endpoints inclusief pagination, search, bulk operations, authentication, authorization.
- **Afhankelijkheden**: routes/api.py, ConversationManager, ConversationRepository

### tests/test_api_llm_settings.py
- **Status**: Actief
- **Pad**: /tests/test_api_llm_settings.py
- **Functionaliteit**: API tests voor LLM settings endpoints inclusief GET/PUT settings, presets, defaults, validation, en prompt endpoint integratie met LLM parameters.
- **Afhankelijkheden**: routes/api.py, anthropic_api

## Bitbucket Integration Status

### ✅ Opgeloste Problemen
1. **Platform API Registratie**: `platform_api.py` is nu correct geregistreerd in `app.py`
2. **Async/Await Issues**: Alle async calls zijn geconverteerd naar sync via `asyncio.run()`
3. **MCP Integration Initialisatie**: Correct geïnitialiseerd in Flask app context
4. **Frontend Platform Selector**: Volledig geïmplementeerd met styling en functionaliteit
5. **Error Handling**: Robuuste error handling voor connection failures
6. **Configuration Validation**: Platform-specifieke configuratie validatie

### 🔧 Configuratie Vereisten

#### GitHub (Bestaand)
```env
MCP_SERVER_SCRIPT=npx
MCP_SERVER_VENV_PATH=/path/to/venv
GITHUB_TOKEN=ghp_xxxxxxxxxxxx
```

#### Bitbucket (Nieuw)
```env
BITBUCKET_WORKSPACE=your-workspace
BITBUCKET_USERNAME=your-username  
BITBUCKET_APP_PASSWORD=ATBBxxxxxxxxxx
DEFAULT_PLATFORM=github
```

### 🚀 Gebruiksinstructies
1. **Platform Selectie**: Gebruik de radio buttons in de interface om tussen GitHub en Bitbucket te wisselen
2. **Verbinding**: Klik op "Verbinden" om verbinding te maken met het geselecteerde platform
3. **Status Monitoring**: De status indicator toont real-time verbindingsstatus
4. **Workflow Compatibility**: Alle bestaande workflows werken met beide platforms

### 🔍 Troubleshooting
- **GitHub connectie faalt**: Controleer MCP_SERVER_SCRIPT environment variable
- **Bitbucket connectie faalt**: Controleer BITBUCKET_* environment variables
- **Platform API niet beschikbaar**: Controleer of platform_api.py correct is geregistreerd in app.py
- **Async errors**: Alle async calls zijn nu via asyncio.run() - geen directe await in Flask routes