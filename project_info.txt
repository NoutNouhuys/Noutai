# Project Informatie: aiontwikkelhulp

## Projectoverzicht
De AI Ontwikkelhulp (aiontwikkelhulp) is een tool die de communicatie tussen gebruikers en AI-modellen (specifiek Claude) faciliteert om code-ontwikkeling en repository-beheer te ondersteunen. De tool biedt een gestructureerde manier om AI-gestuurde ontwikkeling uit te voeren volgens een vooraf gedefinieerde werkwijze. Ondersteunt configureerbare LLM instellingen inclusief temperature configuratie en presets voor verschillende use cases met volledige UI integratie. Bevat workflow automatisering voor het automatisch openen en sluiten van chat windows op basis van AI responses, inclusief automatische configuratie van nieuwe chats met Claude Sonnet 4 en developer_agent preset. Volledig analytics systeem voor token usage tracking, kosten berekening en usage insights met real-time weergave in de chat interface. Uitgebreid met conversation enhancements voor token usage weergave en bulk delete functionaliteit. CSRF token ondersteuning geïmplementeerd voor alle API calls. Volledig gerefactored voor betere code organisatie met scheiding van HTML, JavaScript en CSS. Enhanced tool logging geïmplementeerd voor gedetailleerde inzichten in tool uitvoering met visueel onderscheidbare log patterns. Workflow tabs functionaliteit geïmplementeerd voor directe toegang tot 3 verschillende workflow profielen via tabs in plaats van één enkel window, wat de gebruikservaring verbetert door directe toegang, overzicht en efficiëntie. **JavaScript volledig gerefactored naar modulaire structuur voor betere onderhoudbaarheid, testbaarheid en code organisatie.**

## Architectuur
De aiontwikkelhulp bestaat uit verschillende modules die samenwerken om gebruikers te helpen bij het ontwikkelen van software met behulp van AI:

### Core Modules:
- Flask web-applicatie (app.py) - met analytics routes en CSRF protection
- Anthropic API integratie (anthropic_api.py) - met token tracking integratie
- MCP Connector voor tools integratie (mcp_connector.py)
- Configuratie (config.py)
- Repository beheer

### Analytics Modules:
- Token tracker (analytics/token_tracker.py) - Token usage monitoring en recording
- Cost calculator (analytics/cost_calculator.py) - Kosten berekening op basis van model pricing
- Analytics service (analytics/analytics_service.py) - Data aggregatie en insights
- Analytics repository (repositories/analytics_repository.py) - Database operaties voor analytics

### Nieuwe Modules (Refactoring):
- Anthropic configuratie (anthropic_config.py) - met LLM settings en presets
- Anthropic client (anthropic_client.py) - met temperature en preset ondersteuning
- Conversation manager (conversation_manager.py)
- MCP integratie (mcp_integration.py) - met enhanced tool logging

### Frontend Modules:
- templates/home.html - Hoofdtemplate met workflow tabs functionaliteit (7.4KB)
- templates/components/chat_window.html - Herbruikbare chat window component
- templates/conversations.html - Conversation management met token usage, bulk delete en CSRF token ondersteuning
- templates/analytics.html - Analytics dashboard template
- **static/js/main.js** - Hoofdcoördinatie en initialisatie (4.6KB)
- **static/js/modules/state.js** - Globale staat management (2.7KB)
- **static/js/modules/formatting.js** - Berichten formatting en display (7.1KB)
- **static/js/modules/network.js** - Backend communicatie (21.7KB)
- **static/js/modules/windowManager.js** - Chat window beheer (17.6KB)
- **static/js/modules/workflow.js** - Workflow automatisering (22.4KB)
- **static/js/modules/chatAway.js** - Chat Away functionaliteit (3.1KB)
- static/css/home.css - CSS met workflow tabs styling en activity indicators (3.7KB)
- static/css/style.css - Algemene applicatie styling
- static/css/analytics.css - Styling voor analytics dashboard
- static/js/analytics.js - JavaScript voor analytics dashboard functionaliteit
- static/js/log-formatter.js - Log formatting functionaliteit met enhanced tool logging support
- static/css/log-formatter.css - Styling voor geformatteerde logs met enhanced tool logging patterns

## Modules

### templates/home.html
- **Status**: Bijgewerkt voor modulaire JavaScript structuur (7.4KB)
- **Pad**: /templates/home.html
- **Functionaliteit**: Hoofdtemplate voor de chat interface met workflow tabs ondersteuning. Bevat Bootstrap tabs voor 3 workflow profielen (Issue Creation, PR Creation, PR Processed) met activity indicators. Ondersteunt zowel workflow tabs mode als reguliere chat windows mode. Gebruikt Jinja2 macro voor chat window component. Laadt modulaire JavaScript structuur in de juiste volgorde: core modules eerst (state, formatting, network), dan afhankelijke modules (windowManager, workflow, chatAway), en tenslotte main.js voor coördinatie.
- **Afhankelijkheden**: base.html, components/chat_window.html, modulaire JavaScript bestanden, static/css/home.css, static/js/log-formatter.js, static/css/log-formatter.css

### static/js/main.js
- **Status**: Nieuw - hoofdcoördinatie en initialisatie (4.6KB)
- **Pad**: /static/js/main.js
- **Functionaliteit**: Hoofdbestand voor module coördinatie en applicatie initialisatie. Bevat DOMContentLoaded event handler, setupControlPanel() functie, checkUrlParams() functie, en event listener setup voor alle control panel elementen. Coördineert tussen alle modules via de AIOntwikkelhulp namespace. Behoudt alle bestaande functionaliteit maar in een georganiseerde, modulaire structuur.
- **Afhankelijkheden**: Alle JavaScript modules via AIOntwikkelhulp namespace

### static/js/modules/state.js
- **Status**: Nieuw - globale staat management (2.7KB)
- **Pad**: /static/js/modules/state.js
- **Functionaliteit**: Beheert alle globale staat variabelen inclusief chatWindows Map, chat away state, workflow state, conversation state, en presets cache. Biedt een centrale API voor state management met getters/setters. Bevat state persistence functies voor localStorage (workflow state). Gebruikt revealing module pattern voor encapsulation.
- **Afhankelijkheden**: Geen directe afhankelijkheden

### static/js/modules/formatting.js
- **Status**: Nieuw - berichten formatting en display (7.1KB)
- **Pad**: /static/js/modules/formatting.js
- **Functionaliteit**: Bevat alle functionaliteit voor message formatting en display: formatMessage(), escapeHtml(), addMessageToChat(), addLogMessage(), addLoadingMessage(), removeLoadingMessage(), addErrorMessage(). Ondersteunt markdown formatting, syntax highlighting, en LogFormatter integratie. Behoudt alle bestaande formatting functionaliteit.
- **Afhankelijkheden**: LogFormatter (externe dependency)

### static/js/modules/network.js
- **Status**: Nieuw - backend communicatie (21.7KB)
- **Pad**: /static/js/modules/network.js
- **Functionaliteit**: Beheert alle backend communicatie inclusief API calls, model/preset loading, conversation management, en prompt sending. Bevat functies: getCSRFToken(), getAPIHeaders(), sendPrompt(), sendPromptWithConfig(), sendPromptWithRetry(), populateModelSelect(), populatePresetSelect(), loadConversation(), resetConversation(), fetchLastAssistantMessage(), updateMcpStatus(). Integreert met andere modules via AIOntwikkelhulp namespace.
- **Afhankelijkheden**: State module, Formatting module, Workflow module (voor monitoring), ChatAway module

### static/js/modules/windowManager.js
- **Status**: Nieuw - chat window beheer (17.6KB)
- **Pad**: /static/js/modules/windowManager.js
- **Functionaliteit**: Beheert alle chat window operaties: createChatWindowElement(), initializeChatWindow(), setActiveWindow(), addChatWindow(), removeActiveWindow(), changeLayout(), getLayout(), updateChatAwayToggleVisibility(). Coördineert met State module voor window data management en Network module voor window initialisatie.
- **Afhankelijkheden**: State module, Network module, Workflow module (voor workflow window configuratie)

### static/js/modules/workflow.js
- **Status**: Nieuw - workflow automatisering (22.4KB)
- **Pad**: /static/js/modules/workflow.js
- **Functionaliteit**: Bevat alle workflow automatisering functionaliteit inclusief pattern detectie, tab management, en automatische window creatie. Functies: toggleWorkflow(), toggleWorkflowMode(), initializeWorkflowTabs(), monitorResponse(), autoCreateChatWindow(), autoCreateTabWindow(), configureWorkflowWindow(), showActivityIndicator(), hideActivityIndicator(). Behoudt alle workflow patterns en configuraties.
- **Afhankelijkheden**: State module, WindowManager module, Network module, Formatting module

### static/js/modules/chatAway.js
- **Status**: Nieuw - Chat Away functionaliteit (3.1KB)
- **Pad**: /static/js/modules/chatAway.js
- **Functionaliteit**: Beheert Chat Away functionaliteit voor automatisch doorsturen van responses tussen windows. Bevat functies: startChatAway(), stopChatAway(), forwardResponseToNextWindow(). Integreert met State module voor state management en Network module voor prompt sending.
- **Afhankelijkheden**: State module, Network module

### static/css/home.css
- **Status**: Uitgebreid met workflow tabs styling en activity indicators (3.7KB)
- **Pad**: /static/css/home.css
- **Functionaliteit**: CSS styling voor workflow tabs container, activity indicator animatie, tab styling voor actieve workflow, responsive design voor kleinere schermen. Nieuwe styling: .workflow-tabs-container, .activity-indicator met spin animatie, .nav-link.workflow-active, responsive tabs voor mobile. Behoudt alle bestaande GitHub-style chat window styling.
- **Afhankelijkheden**: style.css (voor CSS variabelen)

### mcp_integration.py
- **Status**: Uitgebreid met enhanced tool logging
- **Pad**: /mcp_integration.py
- **Functionaliteit**: Beheert MCP server connecties en tool gebruik met gedetailleerde logging. Enhanced tool logging implementatie met:
  - Tool start logging: Toont tool naam + geformatteerde parameters per tool type
  - Tool completion logging: Beknopte resultaat samenvatting met tool-specifieke informatie
  - Tool failure logging: Duidelijke error informatie met context
  - Tool-specifieke parameter formatting voor betere leesbaarheid
  - Result summarization voor verschillende tool types (file operations, GitHub operations, etc.)
  - Visual indicators (▶ voor start, ✓ voor success, ✗ voor failure)
- **Afhankelijkheden**: mcp_connector.py, anthropic_config.py

### static/js/log-formatter.js
- **Status**: Uitgebreid met enhanced tool logging patterns
- **Pad**: /static/js/log-formatter.js
- **Functionaliteit**: JavaScript module voor het formatteren van log berichten met enhanced tool logging support. Detecteert nieuwe log patterns:
  - tool_start: ▶ Starting tool patterns
  - tool_complete: ✓ Tool completed patterns  
  - tool_failed: ✗ Tool failed patterns
  - Behoudt backwards compatibility met legacy tool_use patterns
  - Formatteert parameters en resultaten in leesbare structuur
  - Ondersteunt collapsible logs voor lange content
- **Afhankelijkheden**: Geen

### static/css/log-formatter.css
- **Status**: Uitgebreid met enhanced tool logging styling
- **Pad**: /static/css/log-formatter.css
- **Functionaliteit**: CSS styling voor geformatteerde log berichten met enhanced tool logging patterns:
  - tool-start-log: Blauwe styling met pulse animatie
  - tool-complete-log: Groene styling met success pulse animatie
  - tool-failed-log: Rode styling met shake animatie
  - Visual hierarchy met icons en parameter indentation
  - Dark mode ondersteuning voor alle nieuwe patterns
  - Responsive design voor mobile devices
  - Backwards compatibility met bestaande log types
- **Afhankelijkheden**: Gebruikt CSS variabelen uit style.css

### templates/components/chat_window.html
- **Status**: Nieuw toegevoegd tijdens refactoring
- **Pad**: /templates/components/chat_window.html
- **Functionaliteit**: Herbruikbare Jinja2 macro voor chat window component. Parametriseerbaar met window ID en active state. Bevat volledige chat window structuur inclusief model/preset selectors, chat/log kolommen, en input gebied.
- **Afhankelijkheden**: Geen

### templates/conversations.html
- **Status**: Uitgebreid met token usage, bulk delete functionaliteit en CSRF token ondersteuning
- **Pad**: /templates/conversations.html
- **Functionaliteit**: Template voor conversation management interface. Ondersteunt conversation listing, search, rename, delete operations met real-time updates. Token usage weergave per gesprek (input/output tokens, kosten), bulk delete functionaliteit met checkboxes, selecteer alles/geen functionaliteit, bevestigingsmodals voor bulk acties, responsive design voor mobile devices. Volledige CSRF token ondersteuning: getCSRFToken() functie, X-CSRFToken header in alle fetch requests, proper error handling voor alle API calls.
- **Afhankelijkheden**: base.html, API endpoints, analytics API endpoints

### templates/base.html
- **Status**: Actief met CSRF token ondersteuning
- **Pad**: /templates/base.html
- **Functionaliteit**: Basis template met navigatie, thema switching en CSRF token meta tag. Bevat `<meta name="csrf-token" content="{{ csrf_token() }}">` voor frontend toegang tot CSRF token.
- **Afhankelijkheden**: Flask-WTF CSRF token functionaliteit

### routes/api.py
- **Status**: Uitgebreid met token usage endpoints, enhanced conversations API en CSRF protection
- **Pad**: /routes/api.py
- **Functionaliteit**: API endpoints voor conversation management inclusief pagination, search, bulk operations, CRUD operaties met database persistence. Geïntegreerd met ConversationManager voor robuuste data handling. Bugfix toegepast voor thread context issue in send_prompt_stream functie. LLM settings API endpoints, temperature en preset ondersteuning in prompt endpoints. Token usage endpoints: GET /api/analytics/conversations/<id>/usage voor conversation-specifieke usage data, GET /api/analytics/users/<id>/usage voor user usage summaries. Enhanced conversations endpoint met include_usage parameter voor token data. Volledige CSRF protection via Flask-WTF voor alle POST/PUT/DELETE endpoints met proper error handling.
- **Afhankelijkheden**: anthropic_api.py, ConversationManager, ConversationRepository, AnalyticsRepository, Flask app context, Flask-WTF CSRF

### static/css/style.css
- **Status**: Uitgebreid met conversation enhancements styling
- **Pad**: /static/css/style.css
- **Functionaliteit**: Algemene styling voor de applicatie inclusief GitHub-achtige thema's. Ondersteunt de gesplitste kolom layout voor chat en logs. Styling voor workflow toggle button consistent met bestaande UI. Conversation enhancements: Bulk selection styling, token usage summary styling, responsive design voor mobile devices, checkbox styling, bulk delete button animations.
- **Afhankelijkheden**: Geen

### analytics/token_tracker.py
- **Status**: Actief
- **Pad**: /analytics/token_tracker.py
- **Functionaliteit**: Tracks token usage en berekent kosten voor AI model interacties. Ondersteunt recording van usage data, conversation analytics, usage trends, cost estimates, model statistics, en cleanup van oude records.
- **Afhankelijkheden**: models/token_usage.py, analytics/cost_calculator.py, database.py

### analytics/cost_calculator.py
- **Status**: Actief
- **Pad**: /analytics/cost_calculator.py
- **Functionaliteit**: Berekent kosten voor token usage op basis van model pricing. Ondersteunt alle Claude modellen inclusief Claude 4 Sonnet, cache pricing, cost projections, efficiency metrics, en model recommendations.
- **Afhankelijkheden**: Geen directe afhankelijkheden

### analytics/analytics_service.py
- **Status**: Actief
- **Pad**: /analytics/analytics_service.py
- **Functionaliteit**: Service voor analytics data aggregatie en insights. Biedt dashboard data, conversation analytics, cost analysis, usage patterns, model comparison, en automated insights generation.
- **Afhankelijkheden**: analytics/token_tracker.py, analytics/cost_calculator.py, repositories/analytics_repository.py

### repositories/analytics_repository.py
- **Status**: Actief
- **Pad**: /repositories/analytics_repository.py
- **Functionaliteit**: Repository voor analytics en token usage data access. Ondersteunt CRUD operaties, aggregaties, trends analysis, top conversations, model breakdowns, en data cleanup.
- **Afhankelijkheden**: models/token_usage.py, models/conversation.py, database.py

### models/token_usage.py
- **Status**: Actief
- **Pad**: /models/token_usage.py
- **Functionaliteit**: Database model voor token usage tracking. Ondersteunt input/output tokens, cache tokens, cost calculations, metadata storage, en relationships met conversations en messages.
- **Afhankelijkheden**: database.py (SQLAlchemy)

### routes/analytics.py
- **Status**: Actief
- **Pad**: /routes/analytics.py
- **Functionaliteit**: API endpoints voor analytics data. Ondersteunt dashboard data, token usage, costs, trends, model analytics, conversation analytics, cost estimates, pricing info, data export, en cleanup.
- **Afhankelijkheden**: analytics/analytics_service.py, analytics/token_tracker.py, analytics/cost_calculator.py

### templates/analytics.html
- **Status**: Actief
- **Pad**: /templates/analytics.html
- **Functionaliteit**: Analytics dashboard template met summary cards, charts, model breakdown, top conversations, en insights. Ondersteunt periode selectie en real-time data loading.
- **Afhankelijkheden**: base.html, static/css/analytics.css, static/js/analytics.js

### static/css/analytics.css
- **Status**: Actief
- **Pad**: /static/css/analytics.css
- **Functionaliteit**: Styling voor analytics dashboard inclusief responsive design, dark mode support, charts styling, breakdown tables, en insights display.
- **Afhankelijkheden**: Gebruikt CSS variabelen uit style.css

### static/js/analytics.js
- **Status**: Actief
- **Pad**: /static/js/analytics.js
- **Functionaliteit**: JavaScript voor analytics dashboard functionaliteit. Ondersteunt data loading, Chart.js visualisaties, period selection, error handling, en data formatting.
- **Afhankelijkheden**: Chart.js library

### anthropic_api.py
- **Status**: Uitgebreid met token tracking integratie
- **Pad**: /anthropic_api.py
- **Functionaliteit**: High-level API voor interactie met Anthropic Claude modellen. Coördineert tussen client, conversation management, MCP integratie, en token tracking. Ondersteunt conditionele inclusie van project_info in cache. Token usage recording, conversation analytics, real-time usage tracking.
- **Afhankelijkheden**: anthropic_config.py, anthropic_client.py, conversation_manager.py, mcp_integration.py, repositories, analytics/token_tracker.py

### anthropic_config.py
- **Status**: Uitgebreid met LLM settings en presets
- **Pad**: /anthropic_config.py
- **Functionaliteit**: Centralized Anthropic-specifieke configuratie met lazy loading en validatie. Ondersteunt lazy loading van project_info.txt. Temperature property (default 0.2), LLM presets (developer_agent, creative_writing, analysis, balanced), settings validatie, model-specifieke instellingen, en environment variable ondersteuning. Bevat Claude 4 Sonnet model configuratie.
- **Afhankelijkheden**: Geen directe afhankelijkheden

### anthropic_client.py
- **Status**: Uitgebreid met LLM settings ondersteuning
- **Pad**: /anthropic_client.py
- **Functionaliteit**: Pure API communicatie met Claude modellen. Ondersteunt ephemeral caching van zowel system prompt als project_info. Temperature parameter ondersteuning, preset functionaliteit, parameter override capability, model-specifieke settings toepassing, en LLM settings validatie.
- **Afhankelijkheden**: anthropic_config.py

### conversation_manager.py
- **Status**: Volledig geïntegreerd met database
- **Pad**: /conversation_manager.py
- **Functionaliteit**: Beheert conversatie staat en geschiedenis met robuuste database persistentie. Ondersteunt pagination, search, metadata beheer, soft delete. Behoudt backwards compatibility met in-memory storage.
- **Afhankelijkheden**: repositories (ConversationRepository voor database operaties)

### config.py
- **Status**: Gerefactored
- **Pad**: /config.py
- **Functionaliteit**: Verzorgt de algemene applicatie configuratie. Anthropic-specifieke config is verplaatst naar anthropic_config.py.
- **Afhankelijkheden**: anthropic_config.py

### mcp_connector.py
- **Status**: Actief
- **Pad**: /mcp_connector.py
- **Functionaliteit**: Zorgt voor communicatie met externe tools die AI kan gebruiken.
- **Afhankelijkheden**: Geen directe afhankelijkheden binnen het project

### app.py
- **Status**: Uitgebreid met analytics routes en CSRF protection
- **Pad**: /app.py
- **Functionaliteit**: Flask web-applicatie die de gebruikersinterface biedt. Analytics route registratie en analytics pagina endpoint. CSRF protection via Flask-WTF CSRFProtect() voor alle formulieren en API calls.
- **Afhankelijkheden**: anthropic_api.py, config.py, routes/analytics.py, Flask-WTF

### database.py
- **Status**: Uitgebreid met TokenUsage model
- **Pad**: /database.py
- **Functionaliteit**: Database configuratie en session management voor SQLAlchemy. TokenUsage model import voor analytics functionaliteit.
- **Afhankelijkheden**: Flask-SQLAlchemy, models/token_usage.py

### werkwijze/werkwijze.txt
- **Status**: Actief
- **Pad**: /werkwijze/werkwijze.txt
- **Functionaliteit**: Bevat instructies voor het AI-model over hoe repository-ontwikkeling moet verlopen.
- **Afhankelijkheden**: Wordt gebruikt door anthropic_config.py (lazy loaded)

### system_prompt.txt
- **Status**: Actief
- **Pad**: /system_prompt.txt
- **Functionaliteit**: Bevat de basis system prompt voor het AI-model.
- **Afhankelijkheden**: Wordt gebruikt door anthropic_config.py (lazy loaded)

### project_info.txt
- **Status**: Actief
- **Pad**: /project_info.txt
- **Functionaliteit**: Bevat projectinformatie die wordt gecached voor betere performance bij ontwikkel-gerelateerde vragen.
- **Afhankelijkheden**: Wordt gebruikt door anthropic_config.py (lazy loaded)

### repositories/conversation_repository.py
- **Status**: Actief (volledig geïntegreerd)
- **Pad**: /repositories/conversation_repository.py
- **Functionaliteit**: CRUD operaties voor conversations en messages met SQLAlchemy. Ondersteunt soft delete, bulk operations, en transaction management.
- **Afhankelijkheden**: models/conversation.py, database.py

### models/conversation.py
- **Status**: Actief (bijgewerkt)
- **Pad**: /models/conversation.py
- **Functionaliteit**: Database modellen voor conversations en messages. Ondersteunt metadata storage, timestamps, en relationships.
- **Afhankelijkheden**: database.py (SQLAlchemy)

### tests/test_anthropic_config.py
- **Status**: Actief (bijgewerkt)
- **Pad**: /tests/test_anthropic_config.py
- **Functionaliteit**: Unit tests voor AnthropicConfig module, inclusief tests voor project_info caching.
- **Afhankelijkheden**: anthropic_config.py

### tests/test_anthropic_config_llm_settings.py
- **Status**: Actief
- **Pad**: /tests/test_anthropic_config_llm_settings.py
- **Functionaliteit**: Unit tests voor AnthropicConfig LLM settings functionaliteit, inclusief temperature validatie, presets, model-specifieke instellingen, en environment variable loading.
- **Afhankelijkheden**: anthropic_config.py

### tests/test_anthropic_client.py
- **Status**: Uitgebreid met LLM settings tests
- **Pad**: /tests/test_anthropic_client.py
- **Functionaliteit**: Unit tests voor AnthropicClient module, inclusief tests voor project_info caching. Tests voor temperature parameters, preset functionaliteit, parameter overrides, model-specifieke settings, en validatie.
- **Afhankelijkheden**: anthropic_client.py, anthropic_config.py

### tests/test_conversation_manager.py
- **Status**: Volledig uitgebreid
- **Pad**: /tests/test_conversation_manager.py
- **Functionaliteit**: Comprehensive unit tests voor ConversationManager inclusief database integration, CRUD operations, search, pagination, error handling.
- **Afhankelijkheden**: conversation_manager.py

### tests/test_api_conversation_persistence.py
- **Status**: Actief
- **Pad**: /tests/test_api_conversation_persistence.py
- **Functionaliteit**: API tests voor conversation persistence endpoints inclusief pagination, search, bulk operations, authentication, authorization.
- **Afhankelijkheden**: routes/api.py, ConversationManager, ConversationRepository

### tests/test_api_llm_settings.py
- **Status**: Actief
- **Pad**: /tests/test_api_llm_settings.py
- **Functionaliteit**: API tests voor LLM settings endpoints inclusief GET/PUT settings, presets, defaults, validation, en prompt endpoint integratie met LLM parameters.
- **Afhankelijkheden**: routes/api.py, anthropic_api