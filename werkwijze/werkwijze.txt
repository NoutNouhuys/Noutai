# Instructies voor ontwikkelproces

## Stap 1: Controleer project\_info.txt

* Als `project_info.txt` bestaat, lees dit bestand en ga naar Stap 2.
* Als het niet bestaat:

  * Maak branch: `documentation/project_info`
  * Maak bestand `project_info.txt`, vul dit met informatie uit `start.txt`:

    * Projectomschrijving
    * Architectuur/modulestructuur
    * Per module: status, bestandsnaam, pad, functionaliteit, afhankelijkheden
  * Maak bestand `project_stappen.txt`:

    * Korte omschrijving per stap, aanduiding must-have of nice-to-have
    * Welke bestanden gemaakt/gewijzigd moeten worden, acties
  * Commit wijzigingen en push
  * Maak PR naar `main`, wacht op goedkeuring

## Stap 2: Issues controleren

* Zijn er openstaande issues?

  * Ja â†’ Kies eerst bugs, dan andere issues, ga naar Stap 4
  * Nee â†’ ga naar Stap 3

## Stap 3: Nieuw Issue aanmaken

* Maak nieuw issue op basis van eerstvolgende 'must-have 'stap uit `project_stappen.txt` als er geen open issue aanwezig is:

  * Titel: omschrijving te implementeren functionaliteit
  * Beschrijving:

    * Duidelijke uitleg implementatie
    * Welke modules/bestanden aangemaakt of gewijzigd
    * Welke functies toegevoegd/aangepast
    * Acceptatiecriteria (bijvoorbeeld: functie X levert resultaat Y bij input Z)
    * Geef expliciete branchnaam (`feature/...`)
  * Labels toevoegen: `"must-have"`, `"nice-to-have"` of `"bug"`
  * Als je klaar bent geef je geen samenvatting van je werkzaamheden maar vertelt alleen: 'Ik heb issue [nummer] aangemaakt voor Repo [owner]/[repo]', je doet verder niks en je wacht verdere instructies

## Stap 4: Issue uitvoeren

* Kijk of er een branch genoemd wordt in het issue, zo ja, werk daar in verder, anders maak een nieuwe aan.
* Werk wijzigingen uit volgens beschrijving
* Werk tegelijk documenten bij (`project_info.txt`, `project_stappen.txt`) en vat al uitgevoerde stappen in 'project_stappen.txt' samen om het document compact te houden.
* Commit wijzigingen met duidelijk bericht
* Push naar GitHub

## Stap 5: Pull Request

* Maak Pull Request

  * Titel: korte omschrijving
  * Beschrijving: refereer naar issue, beschrijf uitgevoerde wijzigingen, status tests en documentatie
  * Als je klaar bent geef je geen samenvatting van je werkzaamheden maar vertelt alleen: 'Ik heb Pull Request [nummer] aangemaakt voor Repo [owner]/[repo]', je doet verder niks en je wacht verdere instructies

## Stap 6: Mergen Pull Request

  * Merge de Pull Request
  * Verwijder de bijbehorende branche 

## Stap 7: Afronden

* Na goedkeuring en merge PR: sluit het betreffende issue
* Als je klaar bent geef je geen samenvatting van je werkzaamheden maar vertelt alleen: 'Ik heb Pull Request [nummer] verwerkt en bijbehorende branche [branche] verwijderd voor Repo [owner]/[repo]', je doet verder niks en je wacht verdere instructies


Algemeen: Houd code overzichtelijk en documentatie synchroon. Splits grote wijzigingen (>400 regels) in kleinere delen.
